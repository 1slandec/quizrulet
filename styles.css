@font-face{
    font-family: 'Inter';
    src: url('./fonts/Inter-Regular.woff2') format('woff2');
    font-weight: 400;
    font-style: normal;
    font-display: swap;
}

@font-face{
  font-family: 'Gidole';
  src: url('./fonts/Gidole-Regular.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}


/**
  Нормализация блочной модели123123123
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
 p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 }
 
 /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
   Упрощаем работу с изображениями и видео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
   /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
   scrollbar-gutter: stable;
 }
 
 /**
   Плавный скролл
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
  margin: 0;
  height: 100vh;
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
 a:where([class]) {
   display: inline-flex;
 }
 
 /**
   Курсор-рука при наведении на элемент
  */
 button,
 label {
   cursor: pointer;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
 :where([fill]:not(
   [fill="none"],
   [fill^="url"]
 )) {
   fill: currentColor;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
 :where([stroke]:not(
   [stroke="none"],
   [stroke^="url"]
 )) {
   stroke: currentColor;
 }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Приведение рамок таблиц в классический 'collapse' вид
  */
 :where(table) {
   border-collapse: collapse;
   border-color: currentColor;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }

:root {
    --color-dark: #000000;
    --color-light: #ffffff;
    --color-dark-grey: #383636;
    --color-grey: #716F6F;
    --color-light-grey: #ACA8A8;
    --color-green: #5ee152;



    --border-radius: 20;
    --border: 1px solid var(--color-grey);

    --font-family-base: 'Inter', sans-serif;
    --font-gidole: 'Gidole', sans-serif;
    --container-width: 1300px;
    /* --container-padding-x: 15px; */

    --transition-duration: 0.2s;
    --leftblockmargin: 325px;
} 

body {
    font-family: var(--font-family-base);
    color: var(--color-light-grey);
    font-weight: 400;
    font-size: 16px;
    line-height: 1.75;  
    background-color: var(--color-dark-grey);
    margin: 0;
}

a,
button,
input,
textarea,
svg * {
    transition-duration: var(--transition-duration);
}

a {
    color: var(--color-light);
}

a:hover{
    color: var(--color-light-grey);
}


h1, h2, h3, h4, h5, h5{
  font-weight: 700;
  text-transform: uppercase;
}

.header-link {
  position: static;
  display: inline-flex;
  /* font-family: var(--font-gidole); */
  font-weight: 500;
  font-size: 50px;
  text-decoration: none;
  top: 11px;
  left: 38px;
  /* -webkit-text-stroke: 1px #000000; */
} 

.green-text {
  color: var(--color-green);
}

.gray-text {
  color: var(--color-light-grey);
}

.left-block {
  position: absolute;
  display: flex;
  width: var(--leftblockmargin);
  box-sizing: border-box;
  top: 0;
  bottom: 0;
  border-right: 2px solid var(--color-grey);
  justify-content: center;
}

.container {
    /* max-width: calc(var(--container-width) + var(--container-padding-x)*2); */
    display: flex;
    /* margin-inline: auto; */
    /* padding-inline: var(--container-padding-x); */
    margin-left: var(--leftblockmargin);
    height: calc(100vh);
    box-sizing: border-box;
    flex-direction: column;
}

.top-block{
  
  border-bottom: 2px solid var(--color-grey);
  padding: 20px;
  box-sizing: border-box;
  height: 100px;
}

.bottom-block {
  
  padding: 20px;
  box-sizing: border-box;
  flex-grow: 1;
}

.search-box {
  display: inline-flex;
  /* width: 175px; */
  height: 60px;
  padding: 10px;
  background: var(--color-light-grey);
  border-radius: 40px;

}

.search-btn {
  color: var(--color-grey);
  float: right;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  padding: 0px;
  background: var(--color-dark-grey);
  display: flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;

}
.top-search:hover > .search-txt
{
  width: 240px;
  padding: 0 6px;
}

.search-txt {
  border: none;
  background: none;
  outline: none;
  float: left;
  padding-right: 10px;
  color: var(--color-dark-grey);
  font-size: 18px;
  transition: var(--transition-duration);
  line-height: 40px;
  width: 175px;
}